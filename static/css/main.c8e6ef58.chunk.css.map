{"version":3,"sources":["main.c8e6ef58.chunk.css","components/header.scss","varibles.scss","breakpoints.scss","components/banner.scss","components/case.scss","App.scss"],"names":[],"mappings":"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","file":"main.c8e6ef58.chunk.css","sourcesContent":["@import url(https://use.typekit.net/rzj8jml.css);\n.header{width:100%;height:10vh;height:calc(1vh * 10);height:calc(var(--vh, 1vh) * 10);background:#000;z-index:10;position:fixed}.header .header-inner{width:70%;height:100%;font-family:myriad-pro-condensed, sans-serif;font-weight:bold;font-style:normal;display:flex;align-items:center;justify-content:space-between;margin:auto}.header .header-inner .logo{font-family:myriad-pro, sans-serif;color:#fff;font-size:1rem;padding-top:2rem;padding-bottom:2rem}@media (max-width: 425px){.header .header-inner .logo{font-size:0.5rem;padding-bottom:1rem;padding-top:1rem}}@media (max-width: 768px){.header .header-inner .logo{font-size:0.8rem}}@media (max-width: 425px){.header .header-inner .nav-link{display:none}}@media (max-width: 768px){.header .header-inner .nav-link{display:none}}.header .header-inner .nav-link ul{display:flex}.header .header-inner .nav-link li{list-style:none;color:#fff;margin-left:42px;font-size:1rem}.main{width:100%;height:50vh;height:calc(1vh * 50);height:calc(var(--vh, 1vh) * 50);background:#000}.main .inner-banner{font-family:myriad-pro-condensed, sans-serif;font-weight:bold;width:70%;height:100%;margin:auto;display:flex;align-items:center;justify-content:space-between;position:relative}@media (max-width: 425px){.main .inner-banner{flex-direction:column;width:100%}}.main .inner-banner .baneer-headline{flex:1 1 45rem;margin-top:90px;display:flex;flex-direction:column;justify-content:center}.main .inner-banner .baneer-headline .headline{width:40px;height:3px;background:#CB1C45;margin-bottom:1rem}.main .inner-banner .baneer-headline .message{color:#fff;font-size:5rem;padding:0;margin-top:0;line-height:5rem}@media (max-width: 768px){.main .inner-banner .baneer-headline .message{font-size:2.5rem;line-height:2rem}}@media (max-width: 425px){.main .inner-banner .baneer-headline .message{font-size:2.5rem;line-height:3rem}}.main .inner-banner .baneer-headline .start-btn{width:190px;height:50px;background:none;border:solid 3px #CB1C45;color:#fff;text-align:center;font-weight:bold;font-size:0.9rem}@media (max-width: 425px){.main .inner-banner .baneer-headline .start-btn{width:90%}}@media (max-width: 768px){.main .inner-banner .baneer-headline .start-btn{width:90%}}.main .inner-banner .img-hero{flex:1 1 45rem;width:100%;height:100%;margin-top:90px}@media (max-width: 425px){.main .inner-banner .img-hero{display:none}}@media (max-width: 768px){.main .inner-banner .img-hero{flex:1 1 45rem}}.main .inner-banner .img-hero img{width:100%;height:100%}.case{width:100%;height:50vh;height:calc(1vh * 50);height:calc(var(--vh, 1vh) * 50);background:#000}.case .card{font-family:myriad-pro-condensed, sans-serif;font-weight:bold;position:relative;width:70%;height:100%;display:flex;margin:auto}@media (max-width: 425px){.case .card{width:100%}}@media (max-width: 768px){.case .card{width:100%}}.case .card .carditem{display:flex;height:100%;width:100%;align-items:center;justify-content:space-between;margin-top:50px}@media (max-width: 425px){.case .card .carditem{flex-direction:column}}.case .card .carditem .case-id{width:100%;height:100%;background:#1b1b1b;color:#fff;display:flex;flex-direction:column;align-items:flex-start;justify-content:space-around}.case .card .carditem .case-id:first-child{background:#CB1C45}.case .card .carditem .case-id:nth-child(2){margin:0 10px}@media (max-width: 425px){.case .card .carditem .case-id:nth-child(2){margin:20px 0}}.case .card .carditem .case-id img{padding:0;margin-left:20px}@media (max-width: 425px){.case .card .carditem .case-id img{margin-top:10px}}.case .card .carditem .case-id .head{margin-left:20px;font-size:1.5rem;font-weight:bold;padding:0}@media (max-width: 425px){.case .card .carditem .case-id .head{font-size:1rem}}.case .card .carditem .case-id .parg{margin-left:20px;margin-right:10px}@media (max-width: 425px){.case .card .carditem .case-id .parg{font-size:0.8rem;margin-top:20px;margin-bottom:20px}}*{box-sizing:border-box}body{font-family:-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\r \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\r sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;visibility:hidden}html,body,#root{position:relative;margin:0;padding:0;background:#000}\n\n",".header {\r\n  width: 100%;\r\n  height: 10vh;\r\n  height: calc(var(--vh, 1vh) * 10);\r\n  background: $black;\r\n  z-index: 10;\r\n  position: fixed;\r\n  .header-inner {\r\n    width: 70%;\r\n    height: 100%;\r\n    font-family: myriad-pro-condensed, sans-serif;\r\n    font-weight: bold;\r\n    font-style: normal;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin: auto;\r\n    \r\n    .logo {\r\n      font-family: myriad-pro, sans-serif;\r\n      color: $white;\r\n      font-size: 1rem;\r\n      padding-top: 2rem;\r\n      padding-bottom: 2rem;\r\n      @include media(\"<=phone\") {\r\n        font-size: 0.5rem;\r\n        padding-bottom: 1rem;\r\n        padding-top: 1rem;\r\n      }\r\n      @include media(\"<=tablet\") {\r\n        font-size: 0.8rem;\r\n      }\r\n    }\r\n    .nav-link {\r\n      @include media(\"<=phone\") {\r\n        display: none;\r\n      }\r\n      @include media(\"<=tablet\") {\r\n        display: none;\r\n      }\r\n\r\n      ul {\r\n        display: flex;\r\n      }\r\n      li {\r\n        list-style: none;\r\n        color: $white;\r\n        margin-left: 42px;\r\n        font-size: 1rem;\r\n      }\r\n    \r\n    }\r\n  }\r\n}\r\n","$black: #000000;\r\n$white: #ffffff;\r\n$red:#CB1C45;","$breakpoints: (\n  \"phone\": 425px,\n  \"tablet\": 768px,\n  \"desktop\": 1366px,\n  \"LGdesktop\": 1920px,\n) !default;\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @author Eduardo Boucas\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///\t\t'retina2x': (\n///\t\t\t'(-webkit-min-device-pixel-ratio: 2)',\n///\t\t\t'(min-resolution: 192dpi)'\n///\t\t)\n///\t);\n///\n$media-expressions: (\n  \"screen\": \"screen\",\n  \"print\": \"print\",\n  \"handheld\": \"handheld\",\n  \"retina2x\": (\n    \"(-webkit-min-device-pixel-ratio: 2)\",\n    \"(min-resolution: 192dpi)\",\n  ),\n  \"retina3x\": (\n    \"(-webkit-min-device-pixel-ratio: 3)\",\n    \"(min-resolution: 350dpi)\",\n  ),\n) !default;\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @author Eduardo Boucas\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media(\">128px\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media(\">20em\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media(\">2.0rem\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  \"px\": 1,\n  \"em\": 0.01,\n  \"rem\": 0.1,\n) !default;\n///\n/// Generates a media query based on a list of conditions\n///\n/// @author Eduardo Boucas\n///\n/// @param {List}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media(\">phone\") { }\n///\n/// @example scss - With two set breakpoints\n///  @include media(\">phone\", \"<=tablet\") { }\n///\n/// @example scss - With custom values\n///  @include media(\">=358px\", \"<850px\") { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media(\">desktop\", \"<=1350px\") { }\n///\n/// @example scss - With a static expression\n///  @include media(\"retina2x\") { }\n///\n/// @example scss - Mixing everything\n///  @include media(\">=350px\", \"<tablet\", \"retina3x\") { }\n///\n@mixin media($conditions...) {\n  @for $i from 1 through length($conditions) {\n    $conditions: set-nth(\n      $conditions,\n      $i,\n      parse-expression(nth($conditions, $i))\n    );\n  }\n\n  $branches: get-query-branches($conditions);\n  $query: \"\";\n\n  @each $branch in $branches {\n    @if (str-length($query) != 0) {\n      $query: $query + \", \";\n    }\n\n    $query: $query + $branch;\n  }\n\n  @media #{$query} {\n    @content;\n  }\n}\n\n///\n/// Reads a list of media query expressions and separates logical disjunctions into different branches\n///\n/// @author Eduardo Boucas\n///\n/// @param {List}   $expressions  - list of expressions\n///\n/// @throws `$expression` is not a valid expression\n///\n/// @return {List | Null}\n///\n@function get-query-branches($expressions) {\n  $result: \"\";\n  $has-groups: false;\n\n  // Getting initial snapshot and looking for groups\n  @each $expression in $expressions {\n    @if (str-length($result) != 0) {\n      $result: $result + \" and \";\n    }\n\n    @if (type-of($expression) == \"string\") {\n      $result: $result + $expression;\n    } @else if (type-of($expression) == \"list\") {\n      $result: $result + nth($expression, 1);\n      $has-groups: true;\n    } @else {\n      @warn '#{$expression} is not a valid expression.';\n    }\n  }\n\n  // If we have groups, we have to create all possible combinations\n  @if $has-groups {\n    @each $expression in $expressions {\n      @if (type-of($expression) == \"list\") {\n        $first: nth($expression, 1);\n\n        @each $member in $expression {\n          @if ($member != $first) {\n            @each $partial in $result {\n              $result: join(\n                $result,\n                str-replace-first($first, $member, $partial)\n              );\n            }\n          }\n        }\n      }\n    }\n  }\n\n  @return $result;\n}\n\n///\n/// Parses a string to form a media query expression\n///\n/// @author Eduardo Boucas\n///\n/// @param {String}   $expression  - expression (in string)\n///\n/// @throws Expression with type `type-of($expression)` detected, string expected\n/// @throws `$expression` is missing an operator\n/// @throws Unknown unit: `$unit`\n///\n/// @return {String | Null}\n///\n@function parse-expression($expression) {\n  $operator: \"\";\n  $value: \"\";\n  $element: \"\";\n  $result: \"\";\n  $is-width: true;\n\n  @if (type-of($expression) != \"string\") {\n    @warn 'Expression with type `#{type-of($expression)}` detected, string expected.';\n  }\n\n  // Separating the operator from the rest of the expression\n  @if (str-slice($expression, 2, 2) == \"=\") {\n    $operator: str-slice($expression, 1, 2);\n    $value: str-slice($expression, 3);\n  } @else {\n    $operator: str-slice($expression, 1, 1);\n    $value: str-slice($expression, 2);\n  }\n\n  // Checking what type of expression we're dealing with\n  @if map-has-key($breakpoints, $value) {\n    $result: map-get($breakpoints, $value);\n  } @else if map-has-key($media-expressions, $expression) {\n    $result: map-get($media-expressions, $expression);\n    $is-width: false;\n  } @else {\n    $result: to-number($value);\n  }\n\n  @if ($is-width) {\n    $unit: unit($result);\n    $interval: 0;\n\n    @if (map-has-key($unit-intervals, $unit)) {\n      $interval: map-get($unit-intervals, $unit);\n    } @else {\n      @warn 'Unknown unit: #{$unit}';\n    }\n\n    @if ($operator == \">\") {\n      $element: \"(min-width: #{$result + $interval})\";\n    } @else if ($operator == \"<\") {\n      $element: \"(max-width: #{$result - $interval})\";\n    } @else if ($operator == \">=\") {\n      $element: \"(min-width: #{$result})\";\n    } @else if ($operator == \"<=\") {\n      $element: \"(max-width: #{$result})\";\n    } @else {\n      @warn '#{$expression} is missing an operator.';\n    }\n  } @else {\n    $element: $result;\n  }\n\n  @return $element;\n}\n\n///\n/// Replaces the first occurence of the string with the replacement string\n///\n/// @author Eduardo Boucas\n///\n/// @param {String}   $search  - The value being searched for\n/// @param {String}   $replace  - The replacement string\n/// @param {String}   $subject  - The string being replaced on\n///\n/// @return {String | Null}\n///\n@function str-replace-first($search, $replace, $subject) {\n  $search-start: str-index($subject, $search);\n\n  @if $search-start == null {\n    @return $subject;\n  }\n\n  $result: str-slice($subject, 0, $search-start - 1);\n  $result: $result + $replace;\n  $result: $result + str-slice($subject, $search-start + str-length($search));\n\n  @return $result;\n}\n\n///\n/// Casts a number to a string\n///\n/// @author Hugo Giraudel\n///\n/// @param {String}   $string  - Number to be parsed\n///\n/// @return {List | Null}\n///\n@function to-number($string) {\n  // Matrices\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\n  $numbers: 0 1 2 3 4 5 6 7 8 9;\n\n  // Result\n  $result: 0;\n  $divider: 0;\n  $minus: false;\n\n  // Looping through all characters\n  @for $i from 1 through str-length($string) {\n    $character: str-slice($string, $i, $i);\n    $index: index($strings, $character);\n\n    @if $character == \"-\" {\n      $minus: true;\n    } @else if $character == \".\" {\n      $divider: 1;\n    } @else {\n      @if type-of($index) != \"number\" {\n        $result: if($minus, $result * -1, $result);\n        @return _length($result, str-slice($string, $i));\n      }\n\n      $number: nth($numbers, $index);\n\n      @if $divider == 0 {\n        $result: $result * 10;\n      } @else {\n        // Move the decimal dot to the left\n        $divider: $divider * 10;\n        $number: $number / $divider;\n      }\n\n      $result: $result + $number;\n    }\n  }\n\n  @return if($minus, $result * -1, $result);\n}\n\n@function _length($number, $unit) {\n  $strings: \"px\" \"cm\" \"mm\" \"%\" \"ch\" \"pica\" \"in\" \"em\" \"rem\" \"pt\" \"pc\" \"ex\" \"vw\"\n    \"vh\" \"vmin\" \"vmax\";\n  $units: 1px 1cm 1mm 1% 1ch 1pica 1in 1em 1rem 1pt 1pc 1ex 1vw 1vh 1vmin 1vmax;\n  $index: index($strings, $unit);\n\n  @if type-of($index) != \"number\" {\n    @warn 'Unknown unit `#{$unit}`.';\n    @return false;\n  }\n\n  @return $number * nth($units, $index);\n}\n",".main {\r\n  width: 100%;\r\n  height: 50vh;\r\n  height: calc(var(--vh, 1vh) * 50);\r\n  background: $black;\r\n\r\n  .inner-banner {\r\n    font-family: myriad-pro-condensed, sans-serif;\r\n    font-weight: bold;\r\n    width: 70%;\r\n    height: 100%;\r\n    margin: auto;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    position: relative;\r\n    \r\n    @include media(\"<=phone\") {\r\n    flex-direction: column;\r\n    width: 100%;\r\n    }\r\n\r\n    .baneer-headline {\r\n      flex: 1 1 45rem;\r\n      margin-top: 90px;\r\n      display: flex;\r\n\r\n      flex-direction: column;\r\n      justify-content: center;\r\n\r\n      .headline {\r\n        width: 40px;\r\n        height: 3px;\r\n        background: $red;\r\n        margin-bottom: 1rem;\r\n      }\r\n\r\n      .message {\r\n        color: $white;\r\n        font-size: 5rem;\r\n        padding: 0;\r\n        margin-top: 0;\r\n        line-height: 5rem;\r\n\r\n        @include media(\"<=tablet\") {\r\n          font-size: 2.5rem;\r\n          line-height: 2rem;\r\n        }\r\n        @include media(\"<=phone\") {\r\n          font-size: 2.5rem;\r\n          line-height: 3rem;\r\n        }\r\n      }\r\n      .start-btn {\r\n        width: 190px;\r\n        height: 50px;\r\n        background: none;\r\n        border: solid 3px $red;\r\n        color: $white;\r\n        text-align: center;\r\n        font-weight: bold;\r\n        font-size: 0.9rem;\r\n        @include media(\"<=phone\") {\r\n          width:90%;\r\n        }\r\n        @include media(\"<=tablet\") {\r\n          width: 90%;\r\n        }\r\n      }\r\n   \r\n\r\n    }\r\n    .img-hero {\r\n      flex: 1 1 45rem;\r\n      width: 100%;\r\n\r\n      height: 100%;\r\n      margin-top: 90px;\r\n      @include media(\"<=phone\") {\r\n        display: none;\r\n      }\r\n      @include media(\"<=tablet\") {\r\n        \r\n        flex: 1 1 45rem;\r\n      }\r\n   \r\n\r\n      img {\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n    }\r\n  }\r\n}\r\n",".case {\r\n  width: 100%;\r\n  height: 50vh;\r\n  height: calc(var(--vh, 1vh) * 50);\r\n  background: $black;\r\n\r\n  .card {\r\n    font-family: myriad-pro-condensed, sans-serif;\r\n    font-weight: bold;\r\n    position: relative;\r\n    width: 70%;\r\n    height: 100%;\r\n    display: flex;\r\n\r\n    margin: auto;\r\n    @include media(\"<=phone\") {\r\n      width: 100%;\r\n    }\r\n    @include media(\"<=tablet\") {\r\n      width: 100%;\r\n    }\r\n    .carditem {\r\n      display: flex;\r\n      height: 100%;\r\n      width: 100%;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n      margin-top: 50px;\r\n      @include media(\"<=phone\") {\r\n        flex-direction: column;\r\n      }\r\n\r\n      .case-id {\r\n        width: 100%;\r\n        height: 100%;\r\n        background: #1b1b1b;\r\n        color: $white;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n        justify-content: space-around;\r\n\r\n        &:first-child {\r\n          background: $red;\r\n        }\r\n        &:nth-child(2) {\r\n          margin: 0 10px;\r\n          @include media(\"<=phone\") {\r\n            margin: 20px 0;\r\n          }\r\n        }\r\n\r\n        img {\r\n          padding: 0;\r\n          margin-left: 20px;\r\n          @include media(\"<=phone\") {\r\n            margin-top: 10px;\r\n          }\r\n        }\r\n\r\n        .head {\r\n          margin-left: 20px;\r\n          font-size: 1.5rem;\r\n          font-weight: bold;\r\n          padding: 0;\r\n          @include media(\"<=phone\") {\r\n            font-size: 1rem;\r\n          }\r\n        }\r\n        .parg {\r\n          margin-left: 20px;\r\n          margin-right: 10px;\r\n          @include media(\"<=phone\") {\r\n            font-size: 0.8rem;\r\n            margin-top: 20px;\r\n            margin-bottom: 20px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","@import \"./varibles.scss\";\r\n@import \"./breakpoints.scss\";\r\n@import \"./components/header.scss\";\r\n@import \"./components/banner.scss\";\r\n@import \"./components/case.scss\";\r\n@import url(\"https://use.typekit.net/rzj8jml.css\");\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\r\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\r\n    sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  visibility: hidden;\r\n}\r\n\r\nhtml,\r\nbody,\r\n#root {\r\n  position: relative;\r\n  margin: 0;\r\n  padding: 0;\r\n  background: $black;\r\n\r\n}\r\n"]}